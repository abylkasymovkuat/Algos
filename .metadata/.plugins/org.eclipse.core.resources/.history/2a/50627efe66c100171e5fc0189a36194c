package Gryadki;
public class Graph {

    int [][] arr;
    int V;
    boolean [][] bArr;

    
    public Graph (int V){
        this.V = V;
        arr = new int[V][V];
        bArr = new boolean[V][V];
    }

    public void addEdge(int src, int dst){
        this.arr[src][dst] = 1;
        this.arr[dst][src] = 1;
    }

    public void printMat(){

        for ( int i =0;i<this.V;i++)
        {
            System.out.print(i+ ":");
            for ( int j=0;j<this.V;j++){
                if(arr[j][i]==1){
                    System.out.print(" "+j);
                }
            }
            System.out.println();
        }
    }

    public boolean isTherePath(int u, int v){

        if(u == v){

            return true;
        }

        for ( int i =0;i<this.V;i++)
        {
            for ( int j=0;j<this.V;j++){
                if(arr[j][i]==1){
                    if(bArr[j][i]==bArr[i][j])
                         {

                            bArr[j][i] = true;
                            return isTherePath(j, v);
                         }
                }
            }
        }
        bArr = new boolean[V][V];
        return false;
    }
    public static void main(String args[]){

        Graph adMatrix = new Graph(5);

        adMatrix.addEdge( 1, 0);
        adMatrix.addEdge( 2, 0);
        adMatrix.addEdge( 2, 3);
        adMatrix.addEdge( 1, 4);
        //adMatrix.printMat();

        System.out.println(adMatrix.isTherePath(1,4)? "PORTOS":"ZOSOS");

    }
}
